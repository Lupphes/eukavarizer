/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    // Reference Retrieval
    withName: 'BIODBCORE_REFSEQ' {
        container = "docker.io/luppo/biodbcore:latest"
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/ref",
            mode: 'copy',
            overwrite: false
        ]
    }

    withName: 'TABIX_BGZIP' {
        container = 'quay.io/biocontainers/htslib:1.9--hc238db4_4'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ref"
    }

    // Sequence Processor
    withName: 'BIODBCORE_ENA' {
        container = "docker.io/luppo/biodbcore:latest"
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/ena",
            mode: 'copy'
        ]
    }

    withName: 'SRATOOLS_FASTERQDUMP' {
        container = 'biocontainers/mulled-v2-5f89fe0cd045cb1d615630b9261a1d17943a9b6a:2f4a4c900edd6801ff0068c2b3048b4459d119eb-0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena"
    }

    withName: 'SAMTOOLS_COLLATEFASTQ' {
        container = 'biocontainers/samtools:1.21--h50ea8bc_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena"
    }

    withName: 'BWAMEM2_INDEX' {
        container = 'community.wave.seqera.io/library/bwa-mem2_htslib_samtools:e1f420694f8e42bd'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ref/bwamem2"
    }


    withName: 'BWAMEM2_MEM' {
        container = 'community.wave.seqera.io/library/bwa-mem2_htslib_samtools:e1f420694f8e42bd'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/bwamem2"
    }

    withName: 'BWA_MEM' {
        container = 'biocontainers/mulled-v2-fe8faa35dbf6dc65a0f7f5d4ea12e31a79f73e40:1bd8542a8a0b42e0981337910954371d0230828e-0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/bwa"
    }

    // Processors
    withName: 'GUNZIP' {
        container = 'community.wave.seqera.io/library/coreutils_grep_gzip_lbzip2_pruned:be5befa5a6f1b695'
        publishDir = "${params.outdir}/${params.taxonomy_id}/gunzip"
        ext.prefix = { "${meta.id}" }
    }

    withName: 'GZIP' {
        container = 'community.wave.seqera.io/library/coreutils_grep_gzip_lbzip2_pruned:be5befa5a6f1b695'
        publishDir = "${params.outdir}/${params.taxonomy_id}/gzip"
        ext.prefix = { "${meta.id}" }
    }

    withName: 'BWA_INDEX' {
        container = 'quay.io/biocontainers/bwa:0.7.8--hed695b0_5'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ref/bwa"
    }

    withName: 'MINIMAP2_INDEX' {
        tag = { "${meta.id}" }
        container = 'biocontainers/minimap2:2.28--he4a0461_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ref/minimap"
    }

    withName: 'SEQKIT_SIZE' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/size"
    }

    withName: 'MINIMAP2_ALIGN' {
        container = 'biocontainers/mulled-v2-66534bcbb7031a148b13e2ad42583020b9cd25c4:3161f532a5ea6f1dec9be5667c9efc2afdac6104-0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/minimap"
        ext.args = "--MD --cs --eqx ${params.minimap2_profile}"
    }

    withName: 'SAMTOOLS_FAIDX' {
        container = 'quay.io/biocontainers/samtools:1.9--h91753b0_8'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ref"
    }

    withName: 'SAMTOOLS_SORT' {
        container = 'quay.io/biocontainers/samtools:1.9--h91753b0_8'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/sort"
    }

    withName: 'SAMTOOLS_INDEX' {
        container = 'quay.io/biocontainers/samtools:1.9--h91753b0_8'
        publishDir = "${params.outdir}/${params.taxonomy_id}/ena/index"
    }

    // Quality Control
    withName: 'SEQTK_SAMPLE' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/seqtk"
        ext.args = { "-s${params.seqtk_seed}" }
    }

        withName: 'NFCORE_EUKAVARIZER:SEQUENCE_PROCESSOR:QUALITY_CONTROL:PRE_FASTQC_MULTIQC_ANALYSIS:FASTQC' {
        ext.args = '--quiet'
        container = 'biocontainers/fastqc:0.12.1--hdfd78af_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/pre_fastqc"
    }

    withName: 'NFCORE_EUKAVARIZER:SEQUENCE_PROCESSOR:QUALITY_CONTROL:PRE_FASTQC_MULTIQC_ANALYSIS:MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/${params.taxonomy_id}/qc/pre_multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_EUKAVARIZER:SEQUENCE_PROCESSOR:QUALITY_CONTROL:AFTER_FASTQC_MULTIQC_ANALYSIS:FASTQC' {
        ext.args = '--quiet'
        container = 'biocontainers/fastqc:0.12.1--hdfd78af_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/after_fastqc"
    }

    withName: 'NFCORE_EUKAVARIZER:SEQUENCE_PROCESSOR:QUALITY_CONTROL:AFTER_FASTQC_MULTIQC_ANALYSIS:MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/${params.taxonomy_id}/qc/after_multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTP' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/fastp"
        ext.args = { params.fastp_args ?: "" }
    }

    withName: 'FASTPLONG' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/fastplong"
        ext.args = { params.fastplong_args ?: "" }
    }

    withName: 'BBMAP_BBDUK' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/qc/bbduk"
        ext.prefix = { "${meta.id}.trim" }
        ext.args = { "trimq=${params.bbduk_trimq} qtrim=${params.bbduk_qtrim}" }
    }

    // Structural Variant Callers
    withName: 'DELLY_CALL' {
        container = 'quay.io/biocontainers/delly:1.3.3--h4d20210_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/delly"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.suffix = "vcf"
        ext.args   = { params.delly_args ?: "" }
    }

    withName: 'MANTA_GERMLINE' {
        publishDir = "${params.outdir}/${params.taxonomy_id}/manta"
        errorStrategy = 'ignore' // Manta does not have a control for fail if low pairs are inputted, or OOM issues
        maxRetries = 2
        ext.args   = { params.manta_args ?: "" }
    }

    withName: 'GRIDSS_GRIDSS' {
        container = 'biocontainers/gridss:2.13.2--h270b39a_0'
        containerOptions = '--volume /usr/bin/time:/usr/bin/time'
        publishDir = "${params.outdir}/${params.taxonomy_id}/gridss"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.args = { (params.gridss_args ?: "") + " --steps all" }
    }

    withName: 'DYSGU' {
        container = 'community.wave.seqera.io/library/dysgu:1.6.5--69cfa1b1db5c2aec'
        publishDir = "${params.outdir}/${params.taxonomy_id}/dysgu"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.args   = { (params.dysgu_args ?: "") }
    }

    withName: 'TIDDIT_SV' {
        container = 'biocontainers/tiddit:3.6.1--py38h24c8ff8_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/tiddit"
        errorStrategy = 'ignore' // Has internal bug in new version, hopefully fixed by not giving it zipped file
        maxRetries = 3
        ext.args   = { (params.tiddit_args ?: "") + " --skip_assembly" }
    }

    withName: 'SVABA' {
        container = 'biocontainers/svaba:1.2.0--h69ac913_1'
        publishDir = "${params.outdir}/${params.taxonomy_id}/svaba"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.args   = { (params.svaba_args ?: "") }
    }

    withName: 'SNIFFLES' {
        container = 'quay.io/biocontainers/sniffles:2.6.0--pyhdfd78af_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/sniffles"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.args   = { params.sniffles_args ?: "" }
    }

    withName: 'CUTESV' {
        container = 'quay.io/biocontainers/cutesv:2.1.1--pyhdfd78af_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/cutesv"
        errorStrategy = 'ignore'
        maxRetries = 2
        ext.args = { (params.cutesv_args ?: "") + " --sample cutesv_report_sample --genotype" }
    }

    withName: 'SAMPLE_REHEADER' {
        container = 'quay.io/biocontainers/bcftools:1.20--h8b25389_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/reheader",
            mode: 'copy',
            overwrite: true
        ]
    }

    withName: 'SVYNC' {
        container = 'quay.io/biocontainers/svync:0.1.2--h9ee0642_0'
        publishDir = "${params.outdir}/${params.taxonomy_id}/results/svync"
    }

    // Report Generation
    withName: 'SURVIVOR_MERGE' {
        container = 'quay.io/biocontainers/survivor:1.0.7--he513fc3_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
    }

    withName: 'SURVIVOR_FILTER' {
        container = 'quay.io/biocontainers/survivor:1.0.7--he513fc3_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
        ext.prefix = { "${meta.id}_survivor_merge_filtered"}
    }

    withName: 'SURVIVOR_STATS' {
        container = 'quay.io/biocontainers/survivor:1.0.7--he513fc3_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
    }

    withName: 'BCFTOOLS_MERGE' {
        container = 'quay.io/biocontainers/bcftools:1.20--h8b25389_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
        ext.args = '--force-single'
    }

    withName: 'BCFTOOLS_FILTER' {
        container = 'quay.io/biocontainers/bcftools:1.20--h8b25389_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
        ext.prefix = { "${meta.id}_bcftools_filtered"}
        ext.args = { "${params.bcftools_filter_args ?: ''} -W=tbi" }
    }

    withName: 'BCFTOOLS_STATS' {
        container = 'quay.io/biocontainers/bcftools:1.20--h8b25389_0'
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results/vcf",
            mode: 'copy',
            overwrite: true
        ]
    }

    // Analysis Tools
    withName: 'VARIFY' {
        container = "docker.io/luppo/varify:latest"
        publishDir = [
            path: "${params.outdir}/${params.taxonomy_id}/results",
            mode: 'copy',
            overwrite: true
        ]
    }
}
