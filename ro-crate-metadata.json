{
    "@context": [
        "https://w3id.org/ro/crate/1.1/context",
        {
            "GithubService": "https://w3id.org/ro/terms/test#GithubService",
            "JenkinsService": "https://w3id.org/ro/terms/test#JenkinsService",
            "PlanemoEngine": "https://w3id.org/ro/terms/test#PlanemoEngine",
            "TestDefinition": "https://w3id.org/ro/terms/test#TestDefinition",
            "TestInstance": "https://w3id.org/ro/terms/test#TestInstance",
            "TestService": "https://w3id.org/ro/terms/test#TestService",
            "TestSuite": "https://w3id.org/ro/terms/test#TestSuite",
            "TravisService": "https://w3id.org/ro/terms/test#TravisService",
            "definition": "https://w3id.org/ro/terms/test#definition",
            "engineVersion": "https://w3id.org/ro/terms/test#engineVersion",
            "instance": "https://w3id.org/ro/terms/test#instance",
            "resource": "https://w3id.org/ro/terms/test#resource",
            "runsOn": "https://w3id.org/ro/terms/test#runsOn"
        }
    ],
    "@graph": [
        {
            "@id": "./",
            "@type": "Dataset",
            "creativeWorkStatus": "InProgress",
            "datePublished": "2025-02-12T13:20:15+00:00",
            "description": "<h1>\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"docs/images/nf-core-eukavarizer_logo_dark.png\">\n    <img alt=\"nf-core/eukavarizer\" src=\"docs/images/nf-core-eukavarizer_logo_light.png\">\n  </picture>\n</h1>\n\n<!-- [![GitHub Actions CI Status](https://github.com/nf-core/eukavarizer/actions/workflows/ci.yml/badge.svg)](https://github.com/nf-core/eukavarizer/actions/workflows/ci.yml) -->\n<!-- [![GitHub Actions Linting Status](https://github.com/nf-core/eukavarizer/actions/workflows/linting.yml/badge.svg)](https://github.com/nf-core/eukavarizer/actions/workflows/linting.yml) -->\n<!-- [![AWS CI](https://img.shields.io/badge/CI%20tests-full%20size-FF9900?labelColor=000000&logo=Amazon%20AWS)](https://nf-co.re/eukavarizer/results) -->\n<!-- [![Cite with Zenodo](http://img.shields.io/badge/DOI-10.5281/zenodo.XXXXXXX-1073c8?labelColor=000000)](https://doi.org/10.5281/zenodo.XXXXXXX) -->\n[![nf-test](https://img.shields.io/badge/unit_tests-nf--test-337ab7.svg)](https://www.nf-test.com)\n\n[![Nextflow](https://img.shields.io/badge/nextflow%20DSL2-%E2%89%A5v24.04.2-23aa62.svg)](https://www.nextflow.io/)\n[![run with nf-core template](https://img.shields.io/badge/nf--core%20template-3.4.1-brightgreen.svg)](https://nf-co.re/tools)\n[![run with conda](http://img.shields.io/badge/run%20with-conda-3EB049?labelColor=000000&logo=anaconda)](https://docs.conda.io/en/latest/)\n[![run with docker](https://img.shields.io/badge/run%20with-docker-0db7ed?labelColor=000000&logo=docker)](https://www.docker.com/)\n\n[![Get help on Slack](http://img.shields.io/badge/slack-nf--core%20%23eukavarizer-4A154B?labelColor=000000&logo=slack)](https://nfcore.slack.com/channels/eukavarizer)\n[![Follow on Twitter](http://img.shields.io/badge/twitter-%40nf__core-1DA1F2?labelColor=000000&logo=twitter)](https://twitter.com/nf_core)\n[![Follow on Mastodon](https://img.shields.io/badge/mastodon-nf__core-6364ff?labelColor=FFFFFF&logo=mastodon)](https://mstdn.science/@nf_core)\n[![Watch on YouTube](http://img.shields.io/badge/youtube-nf--core-FF0000?labelColor=000000&logo=youtube)](https://www.youtube.com/c/nf-core)\n\n## Introduction\n\n**nf-core/eukavarizer** is a comprehensive, modular, and reproducible bioinformatics pipeline designed for the detection and analysis of **structural variants (SVs)** in **eukaryotic genomes**. The pipeline supports both **short-read and long-read sequencing data**, integrates multiple state-of-the-art SV callers, and provides unified, high-quality variant calls ready for downstream analysis.\n\n### Key Features\n\n- **Multi-caller SV detection**: Integrates 8 SV callers for comprehensive variant discovery\n  - **Short-read optimized**: DELLY, Manta, GRIDSS, SVABA, TIDDIT, DYSGU\n  - **Long-read optimized**: Sniffles, CuteSV, DYSGU\n- **Automated data retrieval**: Downloads reference genomes from RefSeq and sequencing data from ENA using BioDbCore\n- **Complete preprocessing pipeline**: Quality control (FastQC, Fastp, fastplong, BBDuk), adapter trimming, and read filtering\n- **Flexible alignment options**: BWA-MEM (default), BWA-MEM2 (faster), or Minimap2 (long-read optimized)\n- **Intelligent variant merging**: Unifies results using SURVIVOR and BCFtools with SVYNC standardization\n- **Base quality recalibration**: Optional GATK4/GATK4Spark BQSR for improved accuracy\n- **Comprehensive reporting**: MultiQC quality reports and interactive HTML summaries with Varify\n- **Production-ready**: Follows nf-core best practices for reproducibility and scalability\n\n> **Suitable for diverse eukaryotic organisms**: From single-celled yeast to complex mammalian genomes.\n\n## Workflow Overview\n\nThe pipeline processes data through these main stages:\n\n1. **Input & Reference** → Retrieve or use provided reference genome; process input data (FASTQ/BAM/CRAM/raw formats)\n2. **QC & Alignment** → Quality control, trimming, and alignment (BWA-MEM/BWA-MEM2/Minimap2)\n3. **SV Calling** → Multi-caller structural variant detection (DELLY, Manta, GRIDSS, Sniffles, CuteSV, etc.)\n4. **Merging & Filtering** → Unify and filter variants using SURVIVOR and BCFtools\n5. **Reporting** → Generate interactive Varify report and MultiQC quality metrics\n\n## Usage\n\n> [!NOTE]\n> If you are new to Nextflow and nf-core, please refer to [this page](https://nf-co.re/docs/usage/installation) on how to set-up Nextflow. Make sure to [test your setup](https://nf-co.re/docs/usage/introduction#how-to-run-a-pipeline) with `-profile test` before running the workflow on actual data.\n\n## Quick Start\n\n### Test the pipeline\n\n```bash\nnextflow run nf-core/eukavarizer -profile docker,test --resume\n```\n\n### Automatic data retrieval (minimal example)\n\n```bash\nnextflow run nf-core/eukavarizer \\\n   -profile docker,short_quick \\\n   --taxonomy_id 4932 \\\n   --outdir results/yeast_test\n```\n\nThis automatically downloads the reference genome for *S. cerevisiae* (taxonomy ID 4932) and retrieves sequencing data from ENA using BioDbCore.\n\n### Local input with samplesheet\n\n```bash\nnextflow run nf-core/eukavarizer \\\n   -profile docker,short_full \\\n   --input samplesheet.csv \\\n   --reference_genome genome.fa.gz \\\n   --taxonomy_id 4932 \\\n   --outdir results/\n```\n\n### Long-read analysis\n\n```bash\nnextflow run nf-core/eukavarizer \\\n   -profile docker,long_full \\\n   --input samplesheet.csv \\\n   --reference_genome genome.fa.gz \\\n   --taxonomy_id 4932 \\\n   --minimap2_flag \\\n   --outdir results/\n```\n\n### HPC/Cluster execution\n\nExample PBS/SLURM job scripts are provided in `run_scripts/` for different scenarios:\n- Short-read analysis: `run_scripts/eukavarizer_job_short.sh`\n- Long-read (PacBio): `run_scripts/eukavarizer_job_pac.sh`\n- Long-read (Nanopore): `run_scripts/eukavarizer_job_nano.sh`\n\nSee [docs/usage.md](docs/usage.md) for detailed HPC deployment instructions.\n\n> [!WARNING]\n> Please provide pipeline parameters via the CLI or Nextflow `-params-file` option. Custom config files including those provided by the `-c` Nextflow option can be used to provide any configuration _**except for parameters**_; see [docs](https://nf-co.re/docs/usage/getting_started/configuration#custom-configuration-files).\n\n## Key Parameters\n\n| Parameter | Description | Required |\n| --------- | ----------- | -------- |\n| `--taxonomy_id` | NCBI Taxonomy ID (e.g., 4932 for yeast, 9606 for human) | Yes |\n| `--outdir` | Output directory | Yes |\n| `--input` | Samplesheet CSV file | No* |\n| `--reference_genome` | Reference FASTA file | No* |\n\n*If `--input` is not provided, BioDbCore automatically retrieves data from ENA/SRA\n\n### Analysis Profiles\n\nCombine read type with compute environment: `-profile docker,short_full`\n\n| Profile | Read Type | SV Callers |\n|---------|-----------|------------|\n| `short_quick/medium/full` | Short reads | DELLY, Manta, GRIDSS, TIDDIT, SVABA, DYSGU |\n| `long_quick/medium/full` | Long reads | Sniffles, CuteSV, DYSGU |\n| `mix_quick/medium/full` | Hybrid | Combined callers |\n| `test` | Test data | Minimal yeast test |\n\n**Compute profiles**: `docker` (recommended), `singularity`, `conda`, `mamba`\n\nFor all parameters: `nextflow run nf-core/eukavarizer --help` or see [docs/usage.md](docs/usage.md)\n\n## Documentation\n\n- **[Usage Guide](docs/usage.md)** - Detailed instructions, input formats, parameters, and HPC deployment\n- **[Output Documentation](docs/output.md)** - Complete output file descriptions and directory structure\n- **[Parameter Reference](https://nf-co.re/eukavarizer/parameters)** - Full parameter documentation\n\nFor samplesheet format and examples, see [docs/usage.md](docs/usage.md#samplesheet-input).\n\n---\n\n## Pipeline output\n\nPrimary outputs in `--outdir`:\n\n- **`{taxonomy_id}/results/{taxonomy_id}.html`** - Varify interactive report with SV visualizations\n- **`{taxonomy_id}/qc/after_multiqc/multiqc_report.html`** - Comprehensive QC metrics\n- **`{taxonomy_id}/results/vcf/`** - Merged and filtered structural variants (SURVIVOR and BCFtools strategies)\n- **`{taxonomy_id}/{caller}/`** - Individual SV caller outputs (DELLY, Manta, GRIDSS, Sniffles, CuteSV, etc.)\n- **`{taxonomy_id}/ref/`** - Reference genome and indices\n- **`pipeline_info/`** - Execution reports (timeline, trace, software versions)\n\nSee [docs/output.md](docs/output.md) for complete output documentation and directory structure\n\n## Credits\n\n**nf-core/eukavarizer** was originally written by [Ondřej Sloup (@Lupphes)](https://github.com/Lupphes).\n\nWe thank the following people for their extensive assistance in the development of this pipeline:\n\n<!-- Add contributors here -->\n\n## Contributions and Support\n\nIf you would like to contribute to this pipeline, please see the [contributing guidelines](.github/CONTRIBUTING.md).\n\n## Citations\n\nAn extensive list of references for the tools used by the pipeline can be found in the [`CITATIONS.md`](CITATIONS.md) file.\n\n### Pipeline Citation\n\nIf you use nf-core/eukavarizer for your analysis, please cite:\n\n> **Big Data Analysis: Workflow for Analysing Structural Variants in Sequenced Eukaryotic Genomes**\n>\n> Ondřej Sloup\n>\n> <!-- DOI: [10.5281/zenodo.XXXXXXX](https://doi.org/10.5281/zenodo.XXXXXXX) -->\n\n### nf-core Framework\n\nYou can cite the `nf-core` publication as follows:\n\n> **The nf-core framework for community-curated bioinformatics pipelines.**\n>\n> Philip Ewels, Alexander Peltzer, Sven Fillinger, Harshil Patel, Johannes Alneberg, Andreas Wilm, Maxime Ulysse Garcia, Paolo Di Tommaso & Sven Nahnsen.\n>\n> _Nat Biotechnol._ 2020 Feb 13. doi: [10.1038/s41587-020-0439-x](https://dx.doi.org/10.1038/s41587-020-0439-x).\n",
            "hasPart": [
                {
                    "@id": "main.nf"
                },
                {
                    "@id": "assets/"
                },
                {
                    "@id": "conf/"
                },
                {
                    "@id": "docs/"
                },
                {
                    "@id": "docs/images/"
                },
                {
                    "@id": "modules/"
                },
                {
                    "@id": "modules/nf-core/"
                },
                {
                    "@id": "workflows/"
                },
                {
                    "@id": "subworkflows/"
                },
                {
                    "@id": "nextflow.config"
                },
                {
                    "@id": "README.md"
                },
                {
                    "@id": "nextflow_schema.json"
                },
                {
                    "@id": "CHANGELOG.md"
                },
                {
                    "@id": "LICENSE"
                },
                {
                    "@id": "CODE_OF_CONDUCT.md"
                },
                {
                    "@id": "CITATIONS.md"
                },
                {
                    "@id": "modules.json"
                },
                {
                    "@id": "docs/usage.md"
                },
                {
                    "@id": "docs/output.md"
                },
                {
                    "@id": ".nf-core.yml"
                },
                {
                    "@id": ".pre-commit-config.yaml"
                },
                {
                    "@id": ".prettierignore"
                }
            ],
            "isBasedOn": "https://github.com/nf-core/eukavarizer",
            "license": "MIT",
            "mainEntity": {
                "@id": "main.nf"
            },
            "mentions": [
                {
                    "@id": "#b7ffbfa0-de73-4fa5-bfd5-1de402958a33"
                }
            ],
            "name": "nf-core/eukavarizer"
        },
        {
            "@id": "ro-crate-metadata.json",
            "@type": "CreativeWork",
            "about": {
                "@id": "./"
            },
            "conformsTo": [
                {
                    "@id": "https://w3id.org/ro/crate/1.1"
                },
                {
                    "@id": "https://w3id.org/workflowhub/workflow-ro-crate/1.0"
                }
            ]
        },
        {
            "@id": "main.nf",
            "@type": [
                "File",
                "SoftwareSourceCode",
                "ComputationalWorkflow"
            ],
            "dateCreated": "",
            "dateModified": "2025-02-12T14:20:15Z",
            "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalWorkflow/1.0-RELEASE/",
            "keywords": [
                "nf-core",
                "nextflow"
            ],
            "license": [
                "MIT"
            ],
            "name": [
                "nf-core/eukavarizer"
            ],
            "programmingLanguage": {
                "@id": "https://w3id.org/workflowhub/workflow-ro-crate#nextflow"
            },
            "sdPublisher": {
                "@id": "https://nf-co.re/"
            },
            "url": [
                "https://github.com/nf-core/eukavarizer",
                "https://nf-co.re/eukavarizer/dev/"
            ],
            "version": [
                "1.0.0dev"
            ]
        },
        {
            "@id": "https://w3id.org/workflowhub/workflow-ro-crate#nextflow",
            "@type": "ComputerLanguage",
            "identifier": {
                "@id": "https://www.nextflow.io/"
            },
            "name": "Nextflow",
            "url": {
                "@id": "https://www.nextflow.io/"
            },
            "version": "!>=24.04.2"
        },
        {
            "@id": "#b7ffbfa0-de73-4fa5-bfd5-1de402958a33",
            "@type": "TestSuite",
            "instance": [
                {
                    "@id": "#36a44ae2-1022-4e1a-ae0c-ec7b8dc3a4ff"
                }
            ],
            "mainEntity": {
                "@id": "main.nf"
            },
            "name": "Test suite for nf-core/eukavarizer"
        },
        {
            "@id": "#36a44ae2-1022-4e1a-ae0c-ec7b8dc3a4ff",
            "@type": "TestInstance",
            "name": "GitHub Actions workflow for testing nf-core/eukavarizer",
            "resource": "repos/nf-core/eukavarizer/actions/workflows/ci.yml",
            "runsOn": {
                "@id": "https://w3id.org/ro/terms/test#GithubService"
            },
            "url": "https://api.github.com"
        },
        {
            "@id": "https://w3id.org/ro/terms/test#GithubService",
            "@type": "TestService",
            "name": "Github Actions",
            "url": {
                "@id": "https://github.com"
            }
        },
        {
            "@id": "assets/",
            "@type": "Dataset",
            "description": "Additional files"
        },
        {
            "@id": "conf/",
            "@type": "Dataset",
            "description": "Configuration files"
        },
        {
            "@id": "docs/",
            "@type": "Dataset",
            "description": "Markdown files for documenting the pipeline"
        },
        {
            "@id": "docs/images/",
            "@type": "Dataset",
            "description": "Images for the documentation files"
        },
        {
            "@id": "modules/",
            "@type": "Dataset",
            "description": "Modules used by the pipeline"
        },
        {
            "@id": "modules/nf-core/",
            "@type": "Dataset",
            "description": "nf-core modules"
        },
        {
            "@id": "workflows/",
            "@type": "Dataset",
            "description": "Main pipeline workflows to be executed in main.nf"
        },
        {
            "@id": "subworkflows/",
            "@type": "Dataset",
            "description": "Smaller subworkflows"
        },
        {
            "@id": "nextflow.config",
            "@type": "File",
            "description": "Main Nextflow configuration file"
        },
        {
            "@id": "README.md",
            "@type": "File",
            "description": "Basic pipeline usage information"
        },
        {
            "@id": "nextflow_schema.json",
            "@type": "File",
            "description": "JSON schema for pipeline parameter specification"
        },
        {
            "@id": "CHANGELOG.md",
            "@type": "File",
            "description": "Information on changes made to the pipeline"
        },
        {
            "@id": "LICENSE",
            "@type": "File",
            "description": "The license - should be MIT"
        },
        {
            "@id": "CODE_OF_CONDUCT.md",
            "@type": "File",
            "description": "The nf-core code of conduct"
        },
        {
            "@id": "CITATIONS.md",
            "@type": "File",
            "description": "Citations needed when using the pipeline"
        },
        {
            "@id": "modules.json",
            "@type": "File",
            "description": "Version information for modules from nf-core/modules"
        },
        {
            "@id": "docs/usage.md",
            "@type": "File",
            "description": "Usage documentation"
        },
        {
            "@id": "docs/output.md",
            "@type": "File",
            "description": "Output documentation"
        },
        {
            "@id": ".nf-core.yml",
            "@type": "File",
            "description": "nf-core configuration file, configuring template features and linting rules"
        },
        {
            "@id": ".pre-commit-config.yaml",
            "@type": "File",
            "description": "Configuration file for pre-commit hooks"
        },
        {
            "@id": ".prettierignore",
            "@type": "File",
            "description": "Ignore file for prettier"
        },
        {
            "@id": "https://nf-co.re/",
            "@type": "Organization",
            "name": "nf-core",
            "url": "https://nf-co.re/"
        }
    ]
}