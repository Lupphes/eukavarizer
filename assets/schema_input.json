{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/eukavarizer/master/assets/schema_input.json",
    "title": "nf-core/eukavarizer pipeline - params.input schema",
    "description": "Schema for the file provided with params.input",
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "patient": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Patient ID must be provided and cannot contain spaces",
                "meta": ["patient"]
            },
            "sample": {
                "type": "string",
                "pattern": "^\\S+$",
                "errorMessage": "Sample ID must be provided and cannot contain spaces",
                "meta": ["sample"]
            },
            "sex": {
                "errorMessage": "Sex cannot contain spaces",
                "meta": ["sex"],
                "default": "NA",
                "type": "string",
                "pattern": "^\\S+$"
            },
            "status": {
                "type": "integer",
                "errorMessage": "Status can only be 0 (normal) or 1 (tumor). Defaults to 0, if none is supplied.",
                "meta": ["status"],
                "default": 0,
                "minimum": 0,
                "maximum": 1
            },
            "lane": {
                "type": "string",
                "pattern": "^\\S+$",
                "meta": ["lane"]
            },
            "platform": {
                "type": "string",
                "pattern": "^\\S+$",
                "enum": ["ont", "pacbio", "illumina"],
                "errorMessage": {
                    "enum": "Platform must be one of: 'ont', 'pacbio', or 'illumina'",
                    "pattern": "Platform must be a string indicating the sequencing technology and cannot contain spaces"
                },
                "meta": ["platform"]
            },
            "fastq_1": {
                "errorMessage": "FastQ file for reads 1 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "type": "string",
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "format": "file-path",
                "exists": true
            },
            "fastq_2": {
                "errorMessage": "FastQ file for reads 2 cannot contain spaces and must have extension '.fq.gz' or '.fastq.gz'",
                "type": "string",
                "pattern": "^\\S+\\.f(ast)?q\\.gz$",
                "format": "file-path",
                "exists": true
            },
            "bam": {
                "errorMessage": "BAM file cannot contain spaces and must have extension '.bam'",
                "type": "string",
                "pattern": "^\\S+\\.bam$",
                "format": "file-path",
                "exists": true
            },
            "cram": {
                "errorMessage": "CRAM file cannot contain spaces and must have extension '.cram'",
                "type": "string",
                "pattern": "^\\S+\\.cram$",
                "format": "file-path",
                "exists": true
            },
            "sra": {
                "errorMessage": "SRA ID must start with SRR followed by digits",
                "type": "string",
                "pattern": "^SRR[0-9]{6,}$",
                "format": "file-path",
                "exists": true
            },
            "bax.h5": {
                "errorMessage": "bax.h5 must end in .bax.h5 and contain no spaces",
                "type": "string",
                "pattern": "^\\S+\\.bax\\.h5$",
                "format": "file-path",
                "exists": true
            },
            "fast5": {
                "errorMessage": "FAST5 input must end in .tar.gz or .fast5 and contain no spaces",
                "type": "string",
                "pattern": "^\\S+\\.(tar\\.gz|fast5)$",
                "format": "file-path",
                "exists": true
            },
            "pod5": {
                "errorMessage": "POD5 input must end in .pod5 and contain no spaces",
                "type": "string",
                "pattern": "^\\S+\\.pod5$",
                "format": "file-path",
                "exists": true
            }
        },
        "required": ["patient", "sample", "lane", "platform"],
        "anyOf": [
            {
                "required": ["fastq_1"]
            },
            {
                "required": ["bam"]
            },
            {
                "required": ["cram"]
            },
            {
                "required": ["sra"]
            },
            {
                "required": ["bax.h5"]
            },
            {
                "required": ["fast5"]
            },
            {
                "required": ["pod5"]
            }
        ],
        "allOf": [
            {
                "if": {
                    "required": ["fast5"]
                },
                "then": {
                    "properties": {
                        "platform": {
                            "const": "ont"
                        }
                    },
                    "errorMessage": {
                        "platform": "If 'fast5' is provided, platform must be 'ont'"
                    }
                }
            },
            {
                "if": {
                    "required": ["pod5"]
                },
                "then": {
                    "properties": {
                        "platform": {
                            "const": "ont"
                        }
                    },
                    "errorMessage": {
                        "platform": "If 'pod5' is provided, platform must be 'ont'"
                    }
                }
            },
            {
                "if": {
                    "required": ["bax.h5"]
                },
                "then": {
                    "properties": {
                        "platform": {
                            "const": "pacbio"
                        }
                    },
                    "errorMessage": {
                        "platform": "If 'bax.h5' is provided, platform must be 'pacbio'"
                    }
                }
            }
        ],
        "errorMessage": {
            "required": {
                "patient": "Patient ID is required",
                "sample": "Sample name is required",
                "lane": "Lane number is required",
                "platform": "Platform must be specified"
            },
            "anyOf": "At least one sequencing input must be provided: fastq_1, bam, cram, sra, bax.h5, or fast5"
        }
    }
}
