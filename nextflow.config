/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/eukavarizer Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {
    // Input options
    taxonomy_id                     = null
    input                           = []
    outdir                          = "./output"
    reference_genome                = []

    seq_center                       = "unspecified"

    // Base call options
    params.dorado_model_fast5       = "/models/dna_r9.4.1_e8_fast@v3.4"
    params.dorado_model_pod5        = "/models/dna_r9.4.1_e8_fast@v3.4"

    // MultiQC options
    multiqc_config                  = null
    multiqc_title                   = null
    multiqc_logo                    = null
    max_multiqc_email_size          = '25.MB'
    multiqc_methods_description     = null

    // Sequence Processor Parameters
    minimap2_flag                   = true  // Use minimap2 instead of bwa_mem for mapping if threshold is met
    long_read_threshold             = 300   // Reads longer than this will be treated as long reads (ONT, PacBio, etc.)
    bwamem2                         = false // Svaba not supported with bwamem2
    seqtk_flag                      = false  // Use seqtk to sample reads
    seqtk_size                      = 0.1   // Fraction of reads to sample using seqtk
    seqtk_seed                      = 42    // Random seed for reproducible seqtk sampling

    // Quality Control Parameters
    fastp_flag                      = true // Enable/Disable quality control
    bbmap_bbduk_flag                = true // Enable/Disable
    fastp_args                      = "--detect_adapter_for_pe --qualified_quality_phred 15 --length_required 50 --trim_poly_g --cut_front --cut_tail --cut_right --cut_right_window_size 4 --cut_right_mean_quality 15 --n_base_limit 10"
    fastplong_args                  = "--qualified_quality_phred 15 --length_required 50 --n_base_limit 10 --low_complexity_filter --complexity_threshold 30"
    deduplicate_flag                = true // Enable/Disable duplicate removal
    recalibrate_flag                = false // Enable/Disable recalibration

    known_sites                      = null
    known_sites_tbi                  = null

    bbduk_trimq                     = 10   // Minimum base quality for trimming in BBDuk
    bbduk_qtrim                     = 'r'  // End(s) to trim in BBDuk: 'r' (right), 'l' (left), 'rl' (both)

    // Enable/Disable individual algorithms
    delly_flag                      = false
    manta_flag                      = false
    gridss_flag                     = false
    dysgu_flag                      = false // Currently in testing mode
    tiddit_flag                     = false
    svaba_flag                      = false // Currently in testing mode
    sniffles_flag                   = false
    cutesv_flag                     = false
    fastqc_flag                     = false
    multiqc_flag                    = false

    delly_args                      = ""
    tiddit_args                     = ""
    manta_args                      = ""
    gridss_args                     = ""
    sniffles_args                   = ""
    cutesv_args                     = ""
    dysgu_args                      = ""
    svaba_args                      = ""

    params.svaba_annotate           = true // Annotate SVs with SVABA
    params.gridss_annotate          = true // Annotate SVs with GRIDSS

    // Enable/Disable debug views (set to true to show debug views for each step)
    debug_flag                      = false

    // Default SURVIVOR filter parameters (when no profile is set)
    sur_min_sv_size                     = 40
    sur_max_distance_breakpoints        = 1000
    sur_min_supporting_callers          = 1
    sur_account_for_type                = 1
    sur_account_for_sv_strands          = 0
    sur_estimate_distanced_by_sv_size   = 0
    sur_min_num_reads_filter            = 3
    sur_min_allele_freq_filter          = 0.01
    sur_min_sv_size_filter              = 50
    sur_max_sv_size_filter              = 100000

    // BCFTOOLS filter arguments (when no profile is set)
    bcftools_filter_args = "--include '(SVLEN <= -50 || SVLEN >= 50 || SVLEN == 0) && QUAL>20 && GT!=\"0/0\" && FILTER==\"PASS\"'"

    // Boilerplate options
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda', 'luppo']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g) -v $(pwd):/data -w /data'
        docker.fixOwnership     = false  // Disabled due to BusyBox chown incompatibility in BioContainers
        docker.envWhitelist     = 'DOCKER_CONFIG'
    }
    horse           { includeConfig 'conf/samples/horse.config'         }
    rice_indica     { includeConfig 'conf/samples/rice_indica.config'   }
    rice_japonica   { includeConfig 'conf/samples/rice_japonica.config' }
    test_full       { includeConfig 'conf/samples/test_full.config'     }
    test_local      { includeConfig 'conf/samples/test_local.config'    }
    test_nano       { includeConfig 'conf/samples/test_nano.config'     }
    test            { includeConfig 'conf/samples/test.config'          }
}

// Load nf-core custom profiles from different institutions
includeConfig params.custom_config_base && (!System.getenv('NXF_OFFLINE') || !params.custom_config_base.startsWith('http')) ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name              = 'nf-core/eukavarizer'
    description       = 'Structural Variant Analysis for Eukaryotic Genomes'
    homePage          = 'https://github.com/nf-core/eukavarizer'
    mainScript        = 'main.nf'
    defaultBranch     = 'master'
    nextflowVersion   = '!>=25.04.0'
    version           = '1.1.0dev'
    doi               = '' // TODO: Add Zenodo DOI after first release

    contributors = [
        [
            name         : 'Ondřej Sloup',
            affiliation  : 'Masaryk University',
            email        : 'ondrej.sloup@protonmail.com',
            github       : 'Lupphes',
            orcid        : '0009-0008-8898-1128',
            contribution : ['author', 'maintainer']
        ]
    ]
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.5.1'
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs      = params.monochrome_logs
    lenientMode         = false
    maxErrValSize       = 150

    help {
        enabled             = true
        command             = "nextflow run nf-core/eukavarizer --input samplesheet.csv --taxonomy_id <TAXID> --outdir <OUTDIR> -profile docker"
        fullParameter       = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText          = "-\033[2m----------------------------------------------------\033[0m-\n" +
                              "                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m\n" +
                              "\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~'\033[0m\n" +
                              "\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m\n" +
                              "\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m\n" +
                              "                                        \033[0;32m`._,._,'\033[0m\n" +
                              "\033[0;35m  nf-core/eukavarizer " + manifest.version + "\033[0m\n" +
                              "\033[1;36m  Structural Variant Detection for Eukaryotic Genomes\033[0m\n" +
                              "-\033[2m----------------------------------------------------\033[0m-\n"

        afterText =
            "\n\033[1;33mProfiles:\033[0m short_quick/medium/full, long_quick/medium/full, mix_quick/medium/full\n" +
            "\033[1;33mCallers:\033[0m  DELLY, Manta, GRIDSS, SVABA, TIDDIT, DYSGU (short), Sniffles, CuteSV (long)\n\n" +
            (manifest.doi ? "\033[1;33mCitation:\033[0m\n* Pipeline: " : "") +
            (manifest.doi ? manifest.doi.tokenize(',').collect {
                it.trim().replace("https://doi.org/", "https://doi.org/")
            }.join(', ') + '\n' : "") +
            "* nf-core:  https://doi.org/10.1038/s41587-020-0439-x\n" +
            "* Tools:    https://github.com/nf-core/eukavarizer/blob/master/CITATIONS.md\n" +
            "* Docs:     https://nf-co.re/eukavarizer\n" +
            "* Help:     https://nfcore.slack.com/channels/eukavarizer\n"
    }

    summary {
        enabled    = true
        beforeText = help.beforeText
        afterText  = "\n\033[1;32mPipeline completed!\033[0m Results: ${params.outdir}\n" +
                     "\033[1;33mKey outputs:\033[0m multiqc_report.html, varify/report.html, sv_merged/*.vcf.gz\n\n" +
                     (manifest.doi ? "* Pipeline: " + manifest.doi + '\n' : "") +
                     "* nf-core: https://doi.org/10.1038/s41587-020-0439-x\n" +
                     "* Tools: https://github.com/nf-core/eukavarizer/blob/master/CITATIONS.md\n"
    }
}


// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load seqretrieval.config
includeConfig 'conf/biodbcore.config'

// Load profiles.config
includeConfig 'conf/tools.config'
