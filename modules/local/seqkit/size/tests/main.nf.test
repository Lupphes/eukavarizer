nextflow_process {

    name "Test Process SEQKIT_SIZE"
    script "../main.nf"
    process "SEQKIT_SIZE"
    tag "seqkit"
    tag "seqkit/size"
    tag "modules"
    tag "modules_local"

    test("Single-end FASTQ - success") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = Channel.of([
                    [ id: 'test', single_end: true ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz')
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.median_bp.size() == 1 },
                { assert process.out.versions }
            )
        }
    }

    test("Paired-end FASTQ - success") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = Channel.of([
                    [ id: 'test', single_end: false ],
                    [
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz'),
                        file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz')
                    ]
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.median_bp.size() == 1 },
                { assert process.out.versions }
            )
        }
    }

    test("Empty FASTQ - should handle gracefully") {

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = Channel.of([
                    [ id: 'empty', single_end: true ],
                    file(params.modules_testdata_base_path + 'generic/txt/hello.txt')
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.versions }
            )
        }
    }
}
