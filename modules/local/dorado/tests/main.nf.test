nextflow_process {

    name "Test Process DORADO"
    script "../main.nf"
    process "DORADO"
    tag "dorado"
    tag "basecalling"
    tag "modules"
    tag "modules_local"
    tag "nanopore"

    test("Basecall nanopore reads - stub") {

        options '-stub'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                // Note: Using stub mode since fast5 files are large and not in test data
                input[0] = channel.of([
                    [ id: 'nanopore_test' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz')
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.fastq },
                { assert process.out.versions }
            )
        }
    }

    test("Basecall with custom model config - stub") {

        options '-stub'
        config './nextflow.config'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = channel.of([
                    [ id: 'custom_model' ],
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz')
                ])
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.fastq },
                { assert process.out.fastq.get(0).get(1).toString().endsWith('.fastq.gz') },
                { assert process.out.versions }
            )
        }
    }
}
