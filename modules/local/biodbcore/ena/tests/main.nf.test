nextflow_process {

    name "Test Process BIODBCORE_ENA"
    script "../main.nf"
    process "BIODBCORE_ENA"
    tag "biodbcore"
    tag "biodbcore/ena"
    tag "modules"
    tag "modules_local"

    test("Retrieve ENA data - yeast - stub") {

        options '-stub'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = 4932  // Saccharomyces cerevisiae
                input[1] = 12000000  // genome_size_ungapped
                input[2] = "$outputDir"
                input[3] = "WGS"  // library_strategy
                input[4] = "ILLUMINA"  // instrument_platform
                input[5] = 10  // minimum_coverage
                input[6] = 100  // maximum_coverage
                input[7] = 5  // max_results
                input[8] = ""  // assembly_quality
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.ena_results },
                { assert process.out.samplesheet },
                { assert process.out.versions }
            )
        }
    }

    test("Retrieve ENA data with quality filter - stub") {

        options '-stub'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = 511145  // E. coli K-12
                input[1] = 4600000  // genome_size_ungapped
                input[2] = "$outputDir"
                input[3] = "WGS"
                input[4] = "ILLUMINA"
                input[5] = 20
                input[6] = 200
                input[7] = 3
                input[8] = "high"
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() },
                { assert process.out.ena_results },
                { assert process.out.samplesheet },
                { assert process.out.versions }
            )
        }
    }

    test("Retrieve nanopore data - stub") {

        options '-stub'

        when {
            params {
                outdir = "$outputDir"
            }
            process {
                """
                input[0] = 4932
                input[1] = 12000000
                input[2] = "$outputDir"
                input[3] = "WGS"
                input[4] = "OXFORD_NANOPORE"
                input[5] = 10
                input[6] = 100
                input[7] = 2
                input[8] = ""
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert process.out.ena_results },
                { assert process.out.samplesheet },
                { assert process.out.versions }
            )
        }
    }
}
